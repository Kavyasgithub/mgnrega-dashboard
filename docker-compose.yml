version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://mongodb:27017/mgnrega_dashboard
      - REDIS_URL=redis://redis:6379
      - CLIENT_URL=http://localhost:5000
    depends_on:
      - mongodb
      - redis
    restart: unless-stopped
    networks:
      - mgnrega-network
    volumes:
      - ./server/logs:/app/server/logs

  # MongoDB database
  mongodb:
    image: mongo:6.0-rc
    environment:
      - MONGO_INITDB_DATABASE=mgnrega_dashboard
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - mgnrega-network
    command: --quiet

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - mgnrega-network
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

  # Nginx reverse proxy (optional for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - mgnrega-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  mgnrega-network:
    driver: bridge